---
author: huangchao
date: 2012-08-09 11:10:15+00:00
layout: post
title: Effective C++ 笔记1

published: false
---

印象中，大一学的C语言，大二学的C++，至今学习编程也有5年多，很可惜，没有一门精通的。

首先说一下我会的语言。

Java，停留在J2SE的水平，也就是看懂，会用，但是并不深入。像反射的特性一直没搞懂，记得当时看了侯捷的一篇关于反射机制的文章，但没有深入，关键是Java代码写的少，语言这种东西，光说不练是不行的。写Java感觉一些一大堆，但是底层怎么实现的，不知道。虚拟机让我和操作系统之间隔了一层。可以说是放弃了底层与面向过程的编程方式，对C++的一种改进。极大的提高了生产力，虽然效率上可能会有些损失，这其实比较符合现今社会的价值观，快速的产出。

Python，停留在会用的阶段，而且很多时候还得先去查这个函数怎么用。但是Python给我的感觉很好，简洁而高效。现在国外的某些大学的编程入门语言已经变成python，而且各种各样的库可以将你的想法迅速的实现。

Pascal，看的懂，不会编写。这门语言基本都是当时搞ACM时候学了点皮毛，从来没有用它写过一个完整的程序并运行。

Shell，Shell给我的感觉不像是一门语言，而是一种工具。一个shell程序一般都会依赖于其他的程序，比如awk，grep等，可能这也是我没有将shell学到家的肤浅看法。

C++，其实学了这么多年的语言，学的最好的还是C语言。而且由于很多情况下都是在linux下编程，调用系统函数比较多，给我的感觉仍然是在写带类的C。

面向对象和泛型编程在我目前写过的程序中占很小的部分。顶多用到了继承，虚函数，模板等。但是我知道面向对象并不只是封装，继承，多态这么简单，模板也不只是函数和类上面戴了个帽子。所以我决定好好学一下C++，毕竟能上天入地的语言还是非C++莫属。

条款1：视C++为一个语言联邦。

C++是一门包含各种特性的语言。可以说是一把瑞士军刀，就看你会不会用，不会用反而可能伤到自己。听起来又有点像《倚天屠龙记》里面的七伤拳，内力不足则伤己。




